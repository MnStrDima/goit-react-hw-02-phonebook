{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","uuidv4","validationSchema","yup","name","required","number","length","ContactForm","state","onInputChange","e","setState","target","value","initialValues","this","onSubmit","setSubmitting","props","id","type","Component","Filter","initialValue","onFilterChange","onChange","defaultProps","ContactList","contacts","onDeleteButtonClick","map","contact","className","styles","deleteButton","onClick","App","filter","handleSubmit","contactObj","Object","values","some","alert","prevState","handleFilterChange","handleDeleteContact","getFilteredContactsList","toLowerCase","includes","filteredContactsList","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f5c660ef.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__OrlO3\"};","import { Component } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport styles from './ContactForm.module.css';\n\nuuidv4();\n\nconst validationSchema = yup.object({\n  name: yup.string().required(\"Enter contact's name\"),\n  number: yup\n    .string()\n    .length(10, 'Example: 0930939393')\n    .required(\"Enter contact's phone\"),\n});\n\nexport default class ContactForm extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = { name: '', number: '' };\n  onInputChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  render() {\n    return (\n      <Formik\n        initialValues={{ name: this.state.name, number: this.state.number }}\n        validationSchema={validationSchema}\n        onSubmit={({ name, number }, { setSubmitting }) => {\n          this.props.onSubmit({ name, number, id: uuidv4() });\n          setSubmitting(false);\n        }}\n      >\n        <Form>\n          <label>\n            Name\n            <Field\n              type=\"text\"\n              name=\"name\"\n              //   value={this.state.name}\n              //   onChange={this.onInputChange}\n            />\n          </label>\n          <ErrorMessage name=\"name\" />\n\n          <label>\n            Number\n            <Field\n              type=\"tel\"\n              name=\"number\"\n              //   value={this.state.number}\n              //   onChange={this.onInputChange}\n            />\n          </label>\n\n          <ErrorMessage name=\"number\" />\n          <button type=\"submit\">Add contact</button>\n        </Form>\n      </Formik>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\n\nexport default function Filter({ initialValue, onFilterChange }) {\n  return (\n    <div>\n      <label>\n        Find contacts by name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={initialValue}\n          onChange={e => {\n            onFilterChange(e.target.value);\n          }}\n        />\n      </label>\n    </div>\n  );\n}\n\nFilter.defaultProps = {\n  initialValue: '',\n};\nFilter.propTypes = PropTypes.shape({\n  initialValue: PropTypes.string,\n  onFilterChange: PropTypes.func.isRequired,\n}).isRequired;\n","import PropTypes from 'prop-types';\nimport styles from './ContactList.module.css';\n\nexport default function ContactList({ contacts, onDeleteButtonClick }) {\n  return (\n    <ul>\n      {contacts.map(contact => (\n        <li key={contact.id}>\n          {contact.name}: {contact.number}\n          <button\n            type=\"button\"\n            id={contact.id}\n            className={styles.deleteButton}\n            onClick={e => onDeleteButtonClick(e.target.id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = PropTypes.shape({\n  contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onDeleteButtonClick: PropTypes.func.isRequired,\n}).isRequired;\n","import { Component } from 'react';\n\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n  handleSubmit = contactObj => {\n    const contacts = Object.values(this.state.contacts);\n    if (contacts.some(({ name }) => name === contactObj.name)) {\n      return alert(`${contactObj.name} already exists in your phonebook`);\n    }\n    this.setState(prevState => {\n      return {\n        contacts: [...prevState.contacts, contactObj],\n      };\n    });\n  };\n\n  handleFilterChange = filter => {\n    this.setState({\n      filter,\n    });\n  };\n\n  handleDeleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  getFilteredContactsList = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const filteredContactsList = this.getFilteredContactsList();\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.handleSubmit} />\n\n        <h2>Contacts</h2>\n        {filteredContactsList.length >= 1 && (\n          <Filter\n            initialValue={filter}\n            onFilterChange={this.handleFilterChange}\n          />\n        )}\n        <ContactList\n          contacts={filteredContactsList}\n          onDeleteButtonClick={this.handleDeleteContact}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteButton\":\"ContactList_deleteButton__5-_H0\"};"],"sourceRoot":""}